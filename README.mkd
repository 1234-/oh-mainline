Thanks for checking out our repository. We love this project, hope you do too.

Well, you probably want to know to how run this code.

## Overview ##

This repository contains (mostly) Python code written on top of Django and other Python
modules. To develop this code, you'll need some third-party software installed.

Here are the steps you'll have to follow:

* Install some dependencies with the package manager
* Set up the database
* Run the site!
* Read the wiki pages at https://openhatch.org/wiki/Category:Hacking_OpenHatch

Then you can run your own instance of the OpenHatch website and play with the code from an interactive shell.

OpenHatch is currently designed to run on Python 2.6 or above.

### Operating system ###

We develop on Debian 6.0 and Ubuntu 10.x and Ubuntu 11.x, and currently we run the openhatch.org website on Debian 6.0.

These instructions *may* work on Windows, Mac OS, and other GNU/Linux distributions,
but we haven't tested them there. Let us know.

### System dependencies ###

For now, you must install a few dependencies using your system package manager.

This is what we do on Debian testing/unstable:

    sudo apt-get install python2.6-dev python-libxml2 memcached python-mysqldb python-setuptools libxml2-dev libxslt-dev mysql-server mysql-client python-xapian python-setuptools python-imaging subversion python-gevent

Or the equivalent for your system. (It's important that you get Python 2.6 or greater -- some of the OpenHatch code depends on Python 2.6 or higher.)

On some Operating Systems you may not need (or be able) to install all of the above packages, depending on what comes prebuilt with Python as default. If you do find a package for any of the above for your system, you should install it.

Subversion is a dependency ONLY if expect to run unit tests. - See the section ## Testing ##

The other dependencies (like Django) are handled by "buildout", so keep reading patiently and we'll get to that.

If you're running a different operating system, you might need to adjust the instructions.

### Set up the database ###

In this section, we create an empty sqlite database, and then create the tables that you need to store data for the OpenHatch instance you'll run. If you want, you can load data from the main openhatch.org site into your instance! Keep reading; that's called "importing a data snapshot."

As background:

1. Run this command, again from the top level directory:

    python manage.py syncdb --noinput

By passing "noinput", you request that Django not ask you questions. It's important that we not let Django create a super-user at this stage.

2. Run the "migrations" to migrate your database from the empty state into the state it should be in.

    python manage.py migrate

There's a note about troubleshooting migrations below.

3. You're done! The OpenHatch code will now run, and you make modifications.

Now is a good time to import a data snapshot, if you want. See
https://openhatch.org/wiki/Importing_a_data_snapshot for more information about
that. You can read our privacy policy at https://openhatch.org/policies-etc/.

### Run the server ###

The following command will start the OpenHatch webserver:

    python manage.py runserver

This server really doesn't like running in the background, so run it in a separate tab or inside a GNU screen session.
If everything went well and the server started you should see something like this

    Django version 1.3.1, using settings 'mysite.settings'
    Development server is running at http://127.0.0.1:8000/
    Quit the server with CONTROL-C.

### Check it all works ###

Now load <http://localhost:8000/> in your web browser. If you see a familiar-looking page then congratulations! You now have your own personal OpenHatch server to hack away at!

To run the server on an IP other than loopback, use the syntax

    python manage.py runserver IP:PORT

where IP and PORT are what IP and port you want the server to run on.  This and more info is available with

    python manage.py runserver --help

If you're having troubles at this point, see "Troubleshooting" below, or post your question to #openhatch on irc.freenode.net.

### About migrations ###

Sometimes the migrations don't work, and South will give you a database script so you can fix things. But South isn't perfect. You might have to fix the syntax errors in this MySQL. For starters, you can run this vim command in normal mode, it will delete the string ' = ' when it appears at the beginning of a new line.

    :%s/^ = //

Then remove those trailing square brackets. You may need to replace South's strange, Pythonesque code for dates, with proper MySQL code.

## To make the bug importer work ##

At present, there is no inbuilt automation of bug importing (celeryd was causing too many problems). Run the following command to start a bug import:

    python manage.py customs_twist

Since this can take a while, it is a good idea to run this somewhere where it won't prevent you from using your computer - for example, inside a GNU screen session.

## To make the svn missions work ##

Subversion repositories for the svn training missions are stored in mysite/missions-userdata/svn. This directory must be available via svnserve for users to be able to do the svn missions.  See mysite/missions-userdata/svn/README for more details.

## Testing ##

As you make changes to the source code, you'll want to run unit tests to make sure that everything is still hunky-dory. To run all tests, except the rather slow tests in the `customs` app, run this command:

    python manage.py test

For more about tests visit: http://openhatch.org/wiki/Automated_testing

Also, take a look at hudson (which runs our Automated Tests). It's especially helpful if you are trying to solve an issue 
that is failing tests on the OpenHatch server: http://linode2.openhatch.org:8080/  

## People search ##

We have a map at <http://localhost:8000/people/>. To accelerate search on those people, we use
Haystack, a Django layer on top of search engines. In our case, we use the search
engine known as Xapian.

We used to use SOLR, which was complicated to set up and deploy.

### Initialize its index ###

Start in oh-mainline, then run this command:

    python manage.py rebuild_index

(say yes)

### Other maintenance tasks ###

#### Run the hourly tasks related to profiles ####

There's a management command that runs necessary maintenance tasks. At time of writing, it tries to keep our cache of recommended bugs more or less up to date with the state of the bug table in our database.

To run this maintenance task hourly, run these commands:

    # The following use of GNU screen is helpful for running maintenance tasks,
    # but is not necessary.
    screen -RD # Create an instance of screen, or attach to an existing one. 
    # Type Ctrl-a, c to open a new screen
    while (true); do ./bin/mysite profile_hourly_tasks; sleep 1h; done
    # Type Ctrl-a, d to hide ("detach from") the screen

### Adding jQuery UI components ###

When you want to add a jQuery UI component, go here:

    http://jqueryui.com/download

Select the following options, plus yours:

* Sortable
* Accordion
* Tabs
* Progressbar

Note that the site will automatically select any dependencies (like jQuery UI's "Core").

First, under "Theme", select "No Theme". Under "Version", select "1.7.2 (stable release, for jQuery 1.3.2). Then click your little cartoon hand on the Download button.

Unzip the file in /tmp/, and just extract the file js/jquery-ui-1.7.2.custom.min.js, and cp it to mysite/static/js/. That will overwrite the existing jQuery UI bundle.

Be sure to check using git diff that the change you've introduced in git's view of that file is exactly what you expect.

Finally, don't forget to add your component to the list above, so the next person does the right thing.

## Thanks to ##

* The Free Software projects that we depend on &mdash; see the vendor/ directory for a list.
* Our contributors and consultants are listed at <http://openhatch.org/+projects/OpenHatch>. If you've helped to create OpenHatch, you deserve to be listed there!
* The fantastic people who have helped us:
    * [Nelson Pavlosky](http://skyfaller.net)
    * [Shotput Ventures](http://shotputventures.com), who mentored and funded us in the summer of 2009.
    * The [Institute for Security, Technology, and Society](http://ists.dartmouth.edu) and the [Neukom Institute](http://dartmouth.edu/neukom), both at Dartmouth, who sponsored [Parker](http://madebyparker.com) [Phinney](http://openhatch.org/people/pyrak)'s internship during the Dartmouth winter 2010 term.
    * [Google Summer of Code](http://code.google.com/soc/), who are sponsoring [John](http://jstump.com) [Stumpo](http://openhatch.org/people/stump)'s internship during the summer of 2010.
* See CREDITS for other files we use.

## Stay in touch ##

&hellip;on [the project blog](http://openhatch.org/blog), [Identi.ca](http://identi.ca/openhatchery), [Twitter](http://twitter.com/openhatchery), IRC (#openhatch on irc.freenode.net), and the [Face-Book](http://facebook.com/pages/OpenHatch/108578243652).

